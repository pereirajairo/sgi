/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sgi.frame;
  
import br.com.sgi.bean.Minuta;
import br.com.sgi.bean.MinutaNota;
import br.com.sgi.dao.MinutaDAO;
import br.com.sgi.dao.MinutaNotaDAO;
import br.com.sgi.util.UtilDatas;

import java.awt.Dimension;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import org.openswing.swing.mdi.client.InternalFrame;
import org.openswing.swing.util.client.ClientSettings;

/**
 *
 * @author jairosilva
 */
public final class frmMinutasGeral extends InternalFrame {

    private Minuta minuta;
    private MinutaDAO minutaDAO;

    private MinutaNota minutaNota;
    private MinutaNotaDAO minutaNotaDAO;
    private List<MinutaNota> lstMinutaNota = new ArrayList<MinutaNota>();

    private UtilDatas utilDatas;
    private IntegrarPesosRegistrar veioCampo;

    public frmMinutasGeral() {
        try {
            initComponents();

            this.setSize(800, 500);

            if (utilDatas == null) {
                this.utilDatas = new UtilDatas();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERRO " + e.getMessage());
        }
    }

    private void getMinuta(String codigo_minuta) throws SQLException {
        txtPeso.setText("0");
        txtQuantidade.setText("0");
        txtVolume.setText("0");
        if (lstMinutaNota != null) {
            lstMinutaNota.clear();
        }
        btnConfirmar.setEnabled(false);
        minuta = new Minuta();
        minutaDAO = new MinutaDAO();
        minuta = minutaDAO.getMinuta("", "and usu_codlan = " + codigo_minuta);
        if (minuta != null) {
            if (minuta.getUsu_codlan()> 0) {
                minutaNotaDAO = new MinutaNotaDAO();
                lstMinutaNota = minutaNotaDAO.getMinutaNotas("", " and usu_codmin = " + codigo_minuta);
                validarMinuta("");
                btnConfirmar.setEnabled(true);
            }
        }

    }

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void setRecebePalavra(IntegrarPesosRegistrar veioInput, String PROCESSO) throws Exception {
        this.veioCampo = veioInput;
        setTitle(ClientSettings.getInstance().getResources().getResource("Minutas de embarque"));
        txtMinuta.requestFocus();

    }

    private void validarMinuta(String retorno) {
        if (minuta != null) {
            if (minuta.getUsu_codlan()> 0) {
                if (veioCampo != null) {
                    try {
                        veioCampo.retornarMinuta(retorno, minuta.getUsu_codlan().toString(), minuta, lstMinutaNota);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Problemas." + ex);
                    } finally {
                        //              this.dispose();
                    }
                }
            }
        }
    }

    private void cancelarMinuta(String retorno) {
        if (minuta != null) {
            if (minuta.getUsu_codlan()> 0) {
                minuta = new Minuta();
                lstMinutaNota.clear();
                if (veioCampo != null) {
                    try {
                        veioCampo.retornarMinuta(retorno,"", minuta, lstMinutaNota);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Problemas." + ex);
                    } finally {
                        //              this.dispose();
                    }
                }
            }
        }
    }

    private void confirmarMinuta(String retorno) {
        if (minuta != null) {
            if (minuta.getUsu_codlan()> 0) {
                this.dispose();

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        btnConfirmar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtMinuta = new org.openswing.swing.client.TextControl();
        txtVolume = new org.openswing.swing.client.TextControl();
        txtQuantidade = new org.openswing.swing.client.TextControl();
        txtPeso = new org.openswing.swing.client.TextControl();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quote");
        setMinimumSize(new java.awt.Dimension(571, 60));
        setPreferredSize(new java.awt.Dimension(900, 500));

        jLabel12.setText("Minuta");

        btnConfirmar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/accept.png"))); // NOI18N
        btnConfirmar.setText("Confirmar");
        btnConfirmar.setEnabled(false);
        btnConfirmar.setFocusCycleRoot(true);
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtMinuta.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtMinuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinutaActionPerformed(evt);
            }
        });

        txtVolume.setEnabled(false);
        txtVolume.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        txtQuantidade.setEnabled(false);
        txtQuantidade.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeActionPerformed(evt);
            }
        });

        txtPeso.setEnabled(false);
        txtPeso.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel1.setText("Peso");

        jLabel2.setText("Volume'");

        jLabel3.setText("Quantidade");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnConfirmar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 214, Short.MAX_VALUE)
                .addComponent(btnCancelar))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMinuta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtPeso, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtVolume, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                            .addComponent(jLabel2))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE))))
                .addGap(2, 2, 2))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtMinuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCancelar, btnConfirmar});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        confirmarMinuta("CONFIRMAR");


    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        cancelarMinuta("CANCELAR");
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtMinutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinutaActionPerformed
        try {
            getMinuta(txtMinuta.getText());

        } catch (SQLException ex) {
            Logger.getLogger(frmMinutasGeral.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtMinutaActionPerformed

    private void txtQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeActionPerformed
        try {
            getMinuta(txtMinuta.getText());

        } catch (SQLException ex) {
            Logger.getLogger(frmMinutasGeral.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtQuantidadeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private org.openswing.swing.client.TextControl txtMinuta;
    private org.openswing.swing.client.TextControl txtPeso;
    private org.openswing.swing.client.TextControl txtQuantidade;
    private org.openswing.swing.client.TextControl txtVolume;
    // End of variables declaration//GEN-END:variables
}
